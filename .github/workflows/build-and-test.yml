#
# This source file is part of the Stanford Spezi open source project
#
# SPDX-FileCopyrightText: 2022 Stanford University and the project authors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  package_ios:
    name: Build and Test Swift Package iOS
    uses: StanfordSpezi/.github/.github/workflows/xcodebuild-or-fastlane.yml@v2
    with:
      runsonlabels: '["macOS", "self-hosted", "spezi"]'
      scheme: SpeziBluetooth-Package
      resultBundle: SpeziBluetooth-iOS.xcresult
      artifactname: SpeziBluetooth-iOS.xcresult
  buildandtest_visionos:
    name: Build and Test Swift Package visionOS
    uses: StanfordSpezi/.github/.github/workflows/xcodebuild-or-fastlane.yml@v2
    with:
      runsonlabels: '["macOS", "self-hosted", "spezi"]'
      scheme: SpeziBluetooth-Package
      destination: 'platform=visionOS Simulator,name=Apple Vision Pro'
      resultBundle: SpeziBluetooth-visionOS.xcresult
      artifactname: SpeziBluetooth-visionOS.xcresult
  buildandtest_watchos:
    name: Build and Test Swift Package watchOS
    uses: StanfordSpezi/.github/.github/workflows/xcodebuild-or-fastlane.yml@v2
    with:
      runsonlabels: '["macOS", "self-hosted", "spezi"]'
      scheme: SpeziBluetooth-Package
      destination: 'platform=watchOS Simulator,name=Apple Watch Series 10 (46mm)'
      resultBundle: SpeziBluetooth-watchOS.xcresult
      artifactname: SpeziBluetooth-watchOS.xcresult
  ios:
    name: Build and Test iOS
    uses: StanfordSpezi/.github/.github/workflows/xcodebuild-or-fastlane.yml@v2
    with:
      runsonlabels: '["macOS", "self-hosted", "spezi"]'
      path: 'Tests/UITests'
      scheme: TestApp
      artifactname: TestApp-iOS.xcresult
      resultBundle: TestApp-iOS.xcresult
  macos:
    name: Build and Test macOS
    uses: StanfordSpezi/.github/.github/workflows/xcodebuild-or-fastlane.yml@v2
    permissions:
      contents: read
    with:
      runsonlabels: '["macOS", "self-hosted", "bluetooth"]'
      path: 'Tests/UITests'
      setupsigning: true
      artifactname: TestApp-macOS.xcresult
      resultBundle: TestApp-macOS.xcresult
      customcommand: "set -o pipefail && xcodebuild test -scheme 'TestApp' -configuration 'Test' -destination 'platform=macOS,arch=arm64,variant=Mac Catalyst' -derivedDataPath '.derivedData' -resultBundlePath 'TestApp-macOS.xcresult' -skipPackagePluginValidation -skipMacroValidation | xcbeautify"
    secrets: inherit
  uploadcoveragereport:
    name: Upload Coverage Report
    needs: [package_ios, buildandtest_visionos, buildandtest_watchos, ios, macos]
    uses: StanfordSpezi/.github/.github/workflows/create-and-upload-coverage-report.yml@v2
    with:
      coveragereports: SpeziBluetooth-iOS.xcresult SpeziBluetooth-visionOS.xcresult SpeziBluetooth-watchOS.xcresult TestApp-iOS.xcresult TestApp-macOS.xcresult
    secrets:
      token: ${{ secrets.CODECOV_TOKEN }}
